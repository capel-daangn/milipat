version: "3"

services:
  npm:
    container_name: npm
    image: "jc21/nginx-proxy-manager:latest"
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
      - "81:81"
    volumes:
      - ./data:/data
      - ./letsencrypt:/etc/letsencrypt
    # volumes:
    #   - .docker/data:/data
    #   - .docker/letsencrypt:/etc/letsencrypt
  #
  #
  #
  # database:
  #   container_name: milipat/database/mysql
  #   image: mysql
  #   restart: unless-stopped
  #   volumes:
  #     - .docker/data/database/mysql:/var/lib/mysql
  #   ports:
  #     - 3306:3306
  #   environment:
  #     - MYSQL_DATABASE=db_Dev
  #     - MYSQL_ROOT_PASSWORD=1234
  #     # - MYSQL_ROOT_USER=root
  #     # - MYSQL_PASSWORD
  #     - TZ=Asiz/Seoul
  #   networks:
  #     - milipat_network
  #
  #
  #
  backend:
    container_name: backend
    platform: linux/amd64
    build:
      context: ./be/
      dockerfile: Dockerfile
    # depends_on:
    #   - database
    restart: on-failure
    ports:
      - 80:80
    # networks:
    #   - milipat_network
  #
  #
  #
  # frontend:
  #   container_name: frontend
  #   platform: linux/amd64
  #   build:
  #     context: ./fe/
  #     dockerfile: Dockerfile
  #   depends_on:
  #     - backend
  #   restart: on-failure
  #   ports:
  #     - 3000:3000
  #   networks:
  #     - milipat_network
  #
  #
  #
  # ollama:
  #   container_name: ollama
  #   image: ollama/ollama:latest
  #   ports:
  #     - 11434:11434
  #   volumes:
  #     - ./.docker/ollama:/root/.ollama
  #   restart: unless-stopped
  #   depends_on:
  #     - qdrant
  #   networks:
  #     - milipat_network
  #
  #
  #
  # qdrant:
  #   container_name: qdrant
  #   image: qdrant/qdrant:v1.7.3
  #   ports:
  #     - 6333:6333
  #   volumes:
  #     - ./.docker/data/qdrant_storage:/qdrant/storage
  #   depends_on:
  #     - backend
  #   networks:
  #     - milipat_network

# networks:
#   milipat_network:
#     driver: bridge
networks:
  default:
    external: true
    name: npm
